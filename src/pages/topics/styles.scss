@import '../../assets/styles/abstract/variaveis';


.roundItem {
    padding: 15px;
    margin-right: 20px;
    cursor: pointer;

    &:hover {
        transform: scale(1.1) !important;
    }

    .topicItem {
        border-bottom: 1px solid $third-color;
        font-weight: 400;
        font-size: 18px;
        font-family: $font-page;
    }
}

.bodyBg {
    margin: 0;
    overflow: hidden;
}

.background {
    width: 100%;
    height: 400px;
    background: #3E1E68;
    position: relative;
    display: flex;
    align-items: center;
    filter: brightness(0.7);

    h2 {
        font-weight: lighter;
        color: $font-color-light;
    }

    p {
        color: $font-white;
    }
}

$particleSize: 10vmin;
$animationDuration: 6s;
$amount: 40;

.background span {
    width: $particleSize;
    height: $particleSize;
    border-radius: $particleSize;
    backface-visibility: hidden;
    position: absolute;
    animation-name: move;
    animation-duration: $animationDuration;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    $colors: (#583C87,
        #E45A84,
        #FFACAC);

    @for $i from 1 through $amount {
        &:nth-child(#{$i}) {
            color: nth($colors, random(length($colors)));
            top: random(100) * 1%;
            left: random(100) * 1%;
            animation-duration: (random($animationDuration * 10) / 10) * 1s + 10s;
            animation-delay: random(($animationDuration + 10s) * 10) / 10 * -1s;
            transform-origin: (random(50) - 25) * 1vw (random(50) - 25) * 1vh;
            $blurRadius: (random() + 0.5) * $particleSize * 0.5;
            $x: if(random() > 0.5, -1, 1);
            box-shadow: ($particleSize * 2 * $x) 0 $blurRadius currentColor;
        }
    }
}

@keyframes move {
    100% {
        transform: translate3d(0, 0, 1px) rotate(360deg);
    }
}